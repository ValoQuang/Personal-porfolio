{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quang\\\\Porfolio\\\\porfolio\\\\src\\\\components\\\\Home\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../utilities/commonUtils\";\nimport ScrollService from \"../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubcription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOption = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this));\n  };\n\n  const getHeaderOptionClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length < -1) classes += \"header-option-seperator\";\n    if (selectedScreen) classes += \"selected-header-option\";\n    return;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-option\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"QUANG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-option\",\n        children: getHeaderOption()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/quang/Porfolio/porfolio/src/components/Home/Header/Header.js"],"names":["React","useState","useEffect","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubcription","currentScreenBroadCaster","subscribe","getHeaderOption","map","screen","i","getHeaderOptionClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {TOTAL_SCREENS, GET_SCREEN_INDEX} from \"../../utilities/commonUtils\"\r\nimport ScrollService from \"../../utilities/ScrollService\"\r\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport \"./Header.css\"\r\nconst Header = () => {\r\n    const [selectedScreen, setSelectedScreen] = useState(0)\r\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false)\r\n\r\n    const updateCurrentScreen = (currentScreen)=>{\r\n        if (!currentScreen || !currentScreen.screenInView) return;\r\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\r\n        if(screenIndex < 0) return;\r\n    }\r\n    let currentScreenSubcription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen)\r\n    const getHeaderOption = ()=>{\r\n        return (\r\n           TOTAL_SCREENS.map((screen, i)=>\r\n            <div key={screen.screen_name} className={getHeaderOptionClass(i)}\r\n            onClick ={()=> switchScreen(i, screen)}>\r\n                <span>{screen.screen_name}</span>\r\n            </div>\r\n        )) \r\n    }\r\n\r\n    const getHeaderOptionClass = (index)=>{\r\n        let classes = \"header-option\";\r\n        if (index < TOTAL_SCREENS.length < -1)\r\n        classes += \"header-option-seperator\";\r\n        if (selectedScreen)\r\n        classes += \"selected-header-option\";\r\n        return;\r\n    }\r\n\r\n    const switchScreen =(index, screen)=>{\r\n        let screenComponent = document.getElementById(screen.screen_name)\r\n        if (!screenComponent)\r\n        return;\r\n        screenComponent.scrollIntoView({behavior:\"smooth\"})\r\n        setSelectedScreen(index);\r\n        setShowHeaderOptions(false);\r\n    }\r\n\r\n    return (\r\n        <div className='header-option' onClick={()=> setShowHeaderOptions(!showHeaderOptions)}>\r\n            <div className='header-parent'>\r\n                <div className='header-hamburger' onClick={()=> setShowHeaderOptions(!showHeaderOptions)}>\r\n                    <FontAwesomeIcon className='header-hamburger-bars' icon={faBars}/>\r\n                </div>\r\n                <div className='header-logo'>\r\n                    <span>QUANG</span>\r\n                </div>\r\n                <div className={(showHeaderOptions)? \"header-options show-hamburger-options\" : \"header-option\"}>\r\n                    {getHeaderOption()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}